<UserControl x:Class="AntiPlagiarism.Vsix.ToolWindows.SettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AntiPlagiarism.Vsix.ToolWindows"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:platformUI="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:converters="clr-namespace:AntiPlagiarism.Vsix.ToolWindows.Converters"
             
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="1000"
             d:DataContext="{d:DesignInstance Type=local:AntiPlagiarismWindowViewModel, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Themes/Styles.xaml"/>

                <ResourceDictionary>
                    <!--Converters-->
                    <converters:BoolInversionConverter x:Key="boolInversionConverter"/>
                    <converters:BoolToVisibilityConverter x:Key="visibilityConverter"/>

                    <!-- Image Style-->
                    <Style TargetType="Image" BasedOn="{StaticResource vsImageStyle}"/>

                    <!--Work mode combobox style-->
                    <Style x:Key="workModeComboboxStyle" TargetType="ComboBox" BasedOn="{StaticResource vsComboboxStyle}">
                        <Setter Property="Margin" Value="5,5,0,5"/>
                        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                        <Setter Property="IsEnabled" 
                                Value="{Binding Path=IsAnalysisRunning, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, 
                                                Converter={StaticResource boolInversionConverter}}"/>
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                               Text="{Binding Path=Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                               ToolTip="{Binding Path=Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=settingsButton, Path=IsChecked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                     Value="False">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto" MinWidth="200" MaxWidth="200"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto" MinWidth="200" MaxWidth="200"/>
        </Grid.ColumnDefinitions>

        <Button Grid.Column="0" Style="{StaticResource toolbarButtonStyle}" ToolTip="Columns Visibility" Padding="0" Background="Transparent"
                    BorderThickness="0" Margin="2,5,0,5" ContextMenuService.IsEnabled="False"
                    Click="ColumnsVisibilityButton_Click">
            <Image Source="pack://application:,,,/AntiPlagiarism;component/Resources/ColumnSettings.ico"
                       MaxHeight="20" MaxWidth="20"/>
            <Button.ContextMenu>
                <ContextMenu Placement="Bottom" ItemsSource="{Binding Path=ColumnsVisibilityCollectionViewModel.Columns}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="IsCheckable" Value="True"/>
                            <Setter Property="StaysOpenOnClick" Value="True"/>
                            <Setter Property="IsChecked" Value="{Binding Path=IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Setter Property="Header" Value="{Binding Path=ColumnName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </Button.ContextMenu>
        </Button>

        <ToggleButton x:FieldModifier="private" x:Name="gridRowVisibilityToggleButton"
                          Grid.Column="1" Margin="2,5,0,5">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton" BasedOn="{StaticResource vsToggleButtonStyle}">
                    <Setter Property="ToolTip" Value="Show all rows in the grid. Click to show only rows which exceed threshold"/>

                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="ToolTip" Value="Show only rows which exceed threshold in the grid. Click to show all rows"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Image MaxHeight="18" MaxWidth="18">
                <Image.Style>
                    <Style TargetType="Image" BasedOn="{StaticResource vsImageStyle}">
                        <Setter Property="Source" 
                                    Value="pack://application:,,,/AntiPlagiarism;component/Resources/StatusInformation.ico"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}, 
                                                               Path=IsChecked, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                             Value="True">
                                <Setter Property="Source" 
                                            Value="pack://application:,,,/AntiPlagiarism;component/Resources/StatusInvalid.ico"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </ToggleButton>

        <TextBlock Grid.Column="2" Text="Work Mode:" TextAlignment="Center" VerticalAlignment="Center" Margin="10,5,0,5"/>
        <ComboBox Grid.Column="3" Style="{StaticResource workModeComboboxStyle}"
                      ItemsSource="{Binding Path=ReferenceWorkModes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding Path=SelectedReferenceWorkMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding Path=SelectedReferenceWorkMode.Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

        <TextBlock Grid.Column="4" Text="Source Origin:" TextAlignment="Center" VerticalAlignment="Center" Margin="10,5,0,5"/>
        <ComboBox Grid.Column="5" Style="{StaticResource workModeComboboxStyle}"
                      ItemsSource="{Binding Path=SourceOriginModes, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding Path=SelectedSourceOriginMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      ToolTip="{Binding Path=SelectedSourceOriginMode.Description, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</UserControl>
